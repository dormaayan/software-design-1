package il.ac.technion.cs.sd.book.test;

import static org.junit.Assert.*;

import java.util.Optional;

import org.junit.Test;

import com.google.inject.Guice;
import com.google.inject.Injector;

import il.ac.technion.cs.sd.book.app.BookScoreInitializerImpl;

public class BookScoreInitializerTest {

	@Test
	public void test() {
		Injector injector = Guice.createInjector(new TestDoubleKeyDictModule());
		BookScoreInitializerImpl init = injector.getInstance(BookScoreInitializerImpl.class);

		init.setup("<Root>" + "<Reviewer Id=\"123\">" + "<Review>" + "<Id>Foobar</Id>" + "<Score>10</Score>"
				+ "</Review>" + "<Review>" + "<Id>Moobar</Id>" + "<Score>3</Score>" + "</Review>" + "</Reviewer>"
				+ "<Reviewer Id=\"123\">" + "<Review>" + "<Id>Foobar</Id>" + "<Score>5</Score>" + "</Review>"
				+ "</Reviewer>" + "</Root>");
		try {
			assertEquals(init.getDict().findByKeys("123", "Foobar"),Optional<T>.of(5));
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Test
	public void test1() {
		// BookScoreInitializerImpl init = new BookScoreInitializerImpl();
		// init.setup("<Root>" + "<Reviewer Id=\"123\">" + "<Review>" +
		// "<Id>Foobar</Id>" + "<Score>10</Score>"
		// + "</Review>" + "<Review>" + "<Id>Moobar</Id>" + "<Score>3</Score>" +
		// "</Review>" + "</Reviewer>"
		// + "<Reviewer Id=\"678\">" + "<Review>" + "<Id>Boobar</Id>" +
		// "<Score>5</Score>" + " </Review>"
		// + "<Review>" + "<Id>bush</Id>" + "<Score>9</Score>" + " </Review>" +
		// "<Review>" + " <Id>oop</Id>"
		// + "<Score>2</Score>" + "</Review>" + "</Reviewer>" + "<Reviewer
		// Id=\"897\">" + "</Reviewer>"
		// + "</Root>");

	}

}
